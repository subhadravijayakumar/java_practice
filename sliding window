sum of the subarray(fixed size)
import java.util.Scanner;
public class Main
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        int num=sc.nextInt();
        int arr[]=new int[num];
        for(int i=0;i<num;i++)
        {
            arr[i]=sc.nextInt();
        }
        int k=sc.nextInt();
        int result=sum(arr,k);
        System.out.print(result);
        
    }
    public static int sum(int[] arr,int k) 
    {
        int max=0;
        int windowsum=0;
        int windowstart=0;
        for(int i=0;i<arr.length;i++)
        {
            windowsum+=arr[i];
            if(i>=k-1)
            {
                max=Math.max(max,windowsum);
                windowsum-=arr[windowstart];
                windowstart++;
            }
        }
        return max;
        
        
    }
}

Average of the sum 
import java.util.Scanner;
public class Main
{
    public static void main(String args[])
    {
        Scanner sc=new Scanner(System.in);
        int num=sc.nextInt();
        int arr[]=new int [num];
        for(int i=0;i<num;i++)
        {
            arr[i]=sc.nextInt();
        }
        int k=sc.nextInt();
        double average[]=sum(arr,k);
        for(double val:average)
        {
          System.out.print(val+" ");
        }  
        
    }
    public static double [] sum(int arr[],int k)
    {
       double windowsum=0;
       int windowstart=0;
       double result[]=new double[arr.length-k+1];
       for(int i=0;i<arr.length;i++)
       {
           windowsum+=arr[i];
           if(i>=k-1)
           {
               result[windowstart]=windowsum/k;
               windowsum-=arr[windowstart];
               windowstart++;
           }
           
       }
       return result;
    }
}
output
input(format)
9
1 3 2 6 -1 4 1 8 2
5
output
Averages of subarrays of size 5:
2.2 2.8 2.4 3.6 2.8 




